name: chocolatine
on:
  push:
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

env:
  MIRROR_URL: git@github.com:EpitechPromo2027/B-MUL-200-BDX-2-1-myrpg-antoine1.maurel.git
  EXECUTABLES:

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: run checker
        run: check.sh $(pwd) $(pwd)

      - name: display errors
        run : |
          error=0
          while IFS=: read file line title description
          do
            title=$(echo $title | xargs)
            error=1
          echo "::error file=$file,line=$line,title="$title coding style error"::$description"
          done < coding-style-reports.log
          exit $error

  check_program_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: [check_coding_style]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: build project
        run: make
        timeout-minutes : 2

      - name: clean temporary files
        run: make clean

      - name: check executables
        run: |
          for elm in EXECUTABLES
          do
            if [ ! -f $(elm) ] || [ ! -x $(elm) ]; then
              exit 1
            fi
          done

  run_tests:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: [check_program_compilation]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: run tests
        run: make tests_run
        timeout-minutes : 2

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: [run_tests]
    steps:
      - name: checkout
        if: github.event_name == 'push'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: push to EPITECH repository
        if: github.event_name == 'push'
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.SSH_RPG_KEY }}